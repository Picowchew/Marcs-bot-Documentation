(this["webpackJsonpmarcs-bot-documentation"]=this["webpackJsonpmarcs-bot-documentation"]||[]).push([[0],{10:function(e,t,s){},23:function(e,t,s){},24:function(e,t,s){},25:function(e,t,s){},31:function(e,t,s){},32:function(e,t,s){},33:function(e,t,s){},34:function(e,t,s){"use strict";s.r(t);var c=s(0),r=s(1),n=s.n(r),o=s(16),i=s.n(o),a=s(7),d=(s(23),s(2)),j=(s(10),s(24),s(25),s.p+"static/media/avatar.0995317f.png");var h=function(){return Object(c.jsx)(a.b,{to:"/",children:Object(c.jsx)("img",{className:"avatar",src:j,alt:"Marcs-bot's Avatar"})})};s(31);var l=function(){return Object(c.jsx)("h1",{className:"name",children:"Marcs-bot Documentation"})};s(32);var b=function(){return Object(c.jsxs)("div",{className:"navbar",children:[Object(c.jsx)(a.b,{to:"/",className:"navitem",children:"Home"}),Object(c.jsx)(a.b,{to:"/setup",className:"navitem",children:"Setup"}),Object(c.jsx)(a.b,{to:"/commands",className:"navitem",children:"Commands"})]})};var x=function(){return Object(c.jsxs)("div",{className:"header-bg",children:[Object(c.jsxs)("div",{className:"left",children:[Object(c.jsx)(h,{}),Object(c.jsx)(l,{})]}),Object(c.jsx)("div",{className:"right",children:Object(c.jsx)(b,{})}),Object(c.jsx)("div",{className:"clear"}),Object(c.jsx)("hr",{})]})};var m=function(){return Object(c.jsxs)("div",{children:[Object(c.jsx)(x,{}),Object(c.jsx)("br",{}),Object(c.jsxs)("p",{className:"margin",children:["Marcs-bot supplements other Discord logging bots by providing more details in the logging system. The source code of this bot can be found\xa0",Object(c.jsx)("a",{href:"https://github.com/Picowchew/Marcs-bot",target:"_blank",rel:"noreferrer",children:"here"}),"."]})]})};var O=function(){return Object(c.jsxs)("div",{children:[Object(c.jsx)(x,{}),Object(c.jsx)("br",{}),Object(c.jsxs)("div",{className:"margin",children:[Object(c.jsxs)("div",{children:["Clone\xa0",Object(c.jsx)("a",{href:"https://github.com/Picowchew/Marcs-bot",target:"_blank",rel:"noreferrer",children:"this"}),"\xa0repository. Create a new Discord bot user\xa0",Object(c.jsx)("a",{href:"https://discord.com/developers/applications",target:"_blank",rel:"noreferrer",children:"here"}),"\xa0and then invite the bot to your Discord server."]}),Object(c.jsxs)("p",{children:["Add each of the emojis in the ",Object(c.jsx)("code",{children:"emojis"})," folder to the server. Alternatively, you may add the emojis to another Discord server, but be sure to invite the bot to that server as well."]}),Object(c.jsxs)("p",{children:["Edit each of the values in ",Object(c.jsx)("code",{children:"config.json"}),", perhaps with the exception of ",Object(c.jsx)("code",{children:"PREFIX"})," if you would like to use the default prefix of ",Object(c.jsx)("code",{children:"]"}),'. Enable "Developer Mode" on Discord for ease in obtaining the IDs.']}),Object(c.jsxs)("p",{children:["Install Node.js. You may install Node.js\xa0",Object(c.jsx)("a",{href:"https://nodejs.org",target:"_blank",rel:"noreferrer",children:"here"}),". In a terminal, change directory to the local git repository and type\xa0",Object(c.jsx)("code",{children:"npm i"})," to install the dependencies. To run the bot, in the same directory, type ",Object(c.jsx)("code",{children:"node ."})," or ",Object(c.jsx)("code",{children:"node index.js"}),"\xa0in the terminal."]})]})]})};var p=function(){return Object(c.jsxs)("div",{children:[Object(c.jsx)(x,{}),Object(c.jsx)("br",{}),Object(c.jsxs)("div",{className:"margin",children:[Object(c.jsxs)("div",{children:["The default prefix is ",Object(c.jsx)("code",{children:"]"}),"."]}),Object(c.jsx)("p",{children:'The moderators of the Discord server, as configured through the bot, have access to the commands listed under "Moderators" and "Everyone". Likewise, the administrators, as per the bot configuration, have access to the commands listed under "Administrators," "Moderators," and "Everyone."'}),Object(c.jsxs)("table",{children:[Object(c.jsx)("caption",{children:"Everyone"}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"col",children:"Command"}),Object(c.jsx)("th",{scope:"col",children:"Description"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"row",children:"github (alias: git)"}),Object(c.jsx)("td",{children:"Displays the bot's GitHub repository URL"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"row",children:"list"}),Object(c.jsx)("td",{children:"Displays a list of all available commands"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"row",children:"uptime"}),Object(c.jsx)("td",{children:"Displays the bot's uptime"})]})]}),Object(c.jsx)("br",{}),Object(c.jsxs)("table",{children:[Object(c.jsx)("caption",{children:"Moderators"}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"col",children:"Command"}),Object(c.jsx)("th",{scope:"col",children:"Description"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"row",children:"confirm <embed_msg_id> <deleter_id>"}),Object(c.jsx)("td",{children:'This converts the log embed from having a title of "Message Deleted (Action Required)" and a field of "Possible Deleters" to "Message Deleted By Other User" and "Deleter," respectively. The parts of the embed containing the user whose message was deleted, as well as the channel, content, and message ID of the deleted message, remain the same. Enable "Developer Mode" on Discord to be able to obtain the message ID of the embed and the ID of the deleter.'})]})]}),Object(c.jsx)("br",{}),Object(c.jsxs)("table",{children:[Object(c.jsx)("caption",{children:"Administrators"}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"col",children:"Command"}),Object(c.jsx)("th",{scope:"col",children:"Description"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"row",children:"deop"}),Object(c.jsx)("td",{children:"Removes the administrator role, as configured in the bot, from the command invoker"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{scope:"row",children:"op"}),Object(c.jsx)("td",{children:'Adds the administrator role, as configured in the bot, to the command invoker ("op" stands for "operator")'})]})]})]}),Object(c.jsx)("br",{}),Object(c.jsx)("br",{})]})};s(33);var u=function(){return Object(c.jsxs)("div",{className:"other",children:[Object(c.jsx)("h1",{children:"404 error. Page not found!"}),Object(c.jsx)("p",{children:"Click me to go to the homepage!"}),Object(c.jsx)(h,{})]})};var f=function(){return Object(c.jsx)("div",{className:"App",children:Object(c.jsxs)(d.c,{children:[Object(c.jsx)(d.a,{path:"/",component:m,exact:!0}),Object(c.jsx)(d.a,{path:"/setup",component:O}),Object(c.jsx)(d.a,{path:"/commands",component:p}),Object(c.jsx)(d.a,{component:u})]})})};i.a.render(Object(c.jsx)(n.a.StrictMode,{children:Object(c.jsx)(a.a,{children:Object(c.jsx)(f,{})})}),document.getElementById("root"))}},[[34,1,2]]]);
//# sourceMappingURL=main.a9b50d34.chunk.js.map