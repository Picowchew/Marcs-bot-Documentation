{"version":3,"sources":["images/avatar.png","components/avatar.js","components/name.js","components/navbar.js","components/header.js","components/home.js","components/setup.js","components/commands.js","components/other.js","App.js","index.js"],"names":["Avatar","to","className","src","avatar","alt","Name","NavBar","Header","Home","href","target","rel","Setup","Commands","scope","Other","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAAe,G,kBAAA,IAA0B,oCCa1BA,MARf,WACE,OACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAKC,UAAU,SAASC,IAAKC,EAAQC,IAAI,0B,MCDhCC,MAJf,WACE,OAAO,oBAAIJ,UAAU,OAAd,sC,MCgBMK,MAhBf,WACE,OACE,sBAAKL,UAAU,SAAf,UACE,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,UAAvB,kBAGA,cAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,UAA5B,mBAGA,cAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,UAA/B,0BCQSM,MAff,WACE,OACE,gCACE,sBAAKN,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,cCSNO,MArBf,WACE,OACE,gCACE,cAAC,EAAD,IACA,oBAAGP,UAAU,SAAb,2JAIE,mBACEQ,KAAK,yCACLC,OAAO,SACPC,IAAI,aAHN,kBAJF,WC+CSC,MAnDf,WACE,OACE,gCACE,cAAC,EAAD,IACA,sBAAKX,UAAU,SAAf,UACE,4CAEE,mBACEQ,KAAK,yCACLC,OAAO,SACPC,IAAI,aAHN,kBAFF,oDAUE,mBACEF,KAAK,8CACLC,OAAO,SACPC,IAAI,aAHN,kBAVF,yDAmBA,+DACgC,0CADhC,mJAKA,4DAC6B,+CAD7B,mCAEe,0CAFf,mDAGY,qCAHZ,yEAMA,6EAEE,mBAAGF,KAAK,qBAAqBC,OAAO,SAASC,IAAI,aAAjD,kBAFF,6EAOE,yCAPF,6EAQuB,0CARvB,OAQ8C,iDAR9C,iCC+COE,MAlFf,WACE,OACE,gCACE,cAAC,EAAD,IACA,sBAAKZ,UAAU,SAAf,UACE,yDACwB,qCADxB,OAGA,gUAOA,kCACE,+CACA,+BACE,oBAAIa,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,4BAEF,+BACE,oBAAIA,MAAM,MAAV,iCACA,6EAEF,+BACE,oBAAIA,MAAM,MAAV,kBACA,8EAEF,+BACE,oBAAIA,MAAM,MAAV,oBACA,iEAGJ,uBACA,kCACE,iDACA,+BACE,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,4BAEF,+BACE,oBAAIA,MAAM,MAAV,iDACA,+eAYJ,uBACA,kCACE,qDACA,+BACE,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,4BAEF,+BACE,oBAAIA,MAAM,MAAV,kBACA,uHAKF,+BACE,oBAAIA,MAAM,MAAV,gBACA,yJ,MC7DGC,MAVf,WACE,OACE,sBAAKd,UAAU,QAAf,UACE,4DACA,gEACA,cAAC,EAAD,QCmBSe,MApBf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,KAAK,IAAIC,UAAWV,EAAMW,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWN,IAChC,cAAC,IAAD,CAAOK,KAAK,YAAYC,UAAWL,IACnC,cAAC,IAAD,CAAOK,UAAWH,IAClB,yBAAQd,UAAU,aAAlB,UACE,sCACA,sCACA,qOCbVmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.1e72dc58.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.0995317f.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/avatar.css\";\nimport avatar from \"../images/avatar.png\";\n\nfunction Avatar() {\n  return (\n    <Link to=\"/\">\n      <img className=\"avatar\" src={avatar} alt=\"Marcs-bot's Avatar\" />\n    </Link>\n  );\n}\n\nexport default Avatar;\n","import React from \"react\";\nimport \"../styles/name.css\";\n\nfunction Name() {\n  return <h1 className=\"name\">Marcs-bot Documentation</h1>;\n}\n\nexport default Name;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/nav.css\";\n\nfunction NavBar() {\n  return (\n    <div className=\"navbar\">\n      <Link to=\"/\" className=\"navitem\">\n        Home\n      </Link>\n      <Link to=\"/setup\" className=\"navitem\">\n        Setup\n      </Link>\n      <Link to=\"/commands\" className=\"navitem\">\n        Commands\n      </Link>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"../styles/header.css\";\nimport Avatar from \"./avatar\";\nimport Name from \"./name\";\nimport NavBar from \"./navbar\";\n\nfunction Header() {\n  return (\n    <div>\n      <div className=\"left\">\n        <Avatar />\n        <Name />\n      </div>\n      <div className=\"right\">\n        <NavBar />\n      </div>\n      <div className=\"clear\" />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"../App.css\";\nimport Header from \"./header\";\n\nfunction Home() {\n  return (\n    <div>\n      <Header />\n      <p className=\"margin\">\n        Marcs-bot supplements other Discord logging bots by providing more\n        details in the logging system. The source code of this bot can be\n        found&nbsp;\n        <a\n          href=\"https://github.com/Picowchew/Marcs-bot\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          here\n        </a>\n        .\n      </p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../App.css\";\nimport Header from \"./header\";\n\nfunction Setup() {\n  return (\n    <div>\n      <Header />\n      <div className=\"margin\">\n        <div>\n          Clone&nbsp;\n          <a\n            href=\"https://github.com/Picowchew/Marcs-bot\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            this\n          </a>\n          &nbsp;repository. Create a new Discord bot user&nbsp;\n          <a\n            href=\"https://discord.com/developers/applications\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            here\n          </a>\n          &nbsp;and then invite the bot to your Discord server.\n        </div>\n        <p>\n          Add each of the emojis in the <code>emojis</code> folder to the\n          server. Alternatively, you may add the emojis to another Discord\n          server, but be sure to invite the bot to that server as well.\n        </p>\n        <p>\n          Edit each of the values in <code>config.json</code>, perhaps with the\n          exception of <code>PREFIX</code> if you would like to use the default\n          prefix of <code>]</code>. Enable \"Developer Mode\" on Discord for ease\n          in obtaining the IDs.\n        </p>\n        <p>\n          Install Node.js. You may install Node.js&nbsp;\n          <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noreferrer\">\n            here\n          </a>\n          . In a terminal, change directory to the local git repository and\n          type&nbsp;\n          <code>npm i</code> to install the dependencies. To run the bot, in the\n          same directory, type <code>node .</code> or <code>node index.js</code>\n          &nbsp;in the terminal.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Setup;\n","import React from \"react\";\nimport \"../App.css\";\nimport Header from \"./header\";\n\nfunction Commands() {\n  return (\n    <div>\n      <Header />\n      <div className=\"margin\">\n        <div>\n          The default prefix is <code>]</code>.\n        </div>\n        <p>\n          The moderators of the Discord server, as configured through the bot,\n          have access to the commands listed under \"Moderators\" and \"Everyone\".\n          Likewise, the administrators, as per the bot configuration, have\n          access to the commands listed under \"Administrators,\" \"Moderators,\"\n          and \"Everyone.\"\n        </p>\n        <table>\n          <caption>Everyone</caption>\n          <tr>\n            <th scope=\"col\">Command</th>\n            <th scope=\"col\">Description</th>\n          </tr>\n          <tr>\n            <th scope=\"row\">github (alias: git)</th>\n            <td>Displays the bot's GitHub repository URL</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">list</th>\n            <td>Displays a list of all available commands</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">uptime</th>\n            <td>Displays the bot's uptime</td>\n          </tr>\n        </table>\n        <br />\n        <table>\n          <caption>Moderators</caption>\n          <tr>\n            <th scope=\"col\">Command</th>\n            <th scope=\"col\">Description</th>\n          </tr>\n          <tr>\n            <th scope=\"row\">confirm &lt;embed_msg_id&gt; &lt;deleter_id&gt;</th>\n            <td>\n              This converts the log embed from having a title of \"Message\n              Deleted (Action Required)\" and a field of \"Possible Deleters\" to\n              \"Message Deleted By Other User\" and \"Deleter,\" respectively. The\n              parts of the embed containing the user whose message was deleted,\n              as well as the channel, content, and message ID of the deleted\n              message, remain the same. Enable \"Developer Mode\" on Discord to be\n              able to obtain the message ID of the embed and the ID of the\n              deleter.\n            </td>\n          </tr>\n        </table>\n        <br />\n        <table>\n          <caption>Administrators</caption>\n          <tr>\n            <th scope=\"col\">Command</th>\n            <th scope=\"col\">Description</th>\n          </tr>\n          <tr>\n            <th scope=\"row\">deop</th>\n            <td>\n              Removes the administrator role, as configured in the bot, from the\n              command invoker\n            </td>\n          </tr>\n          <tr>\n            <th scope=\"row\">op</th>\n            <td>\n              Adds the administrator role, as configured in the bot, to the\n              command invoker (\"op\" stands for \"operator\")\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Commands;\n","import React from \"react\";\nimport \"../styles/other.css\";\nimport Avatar from \"./avatar\";\n\nfunction Other() {\n  return (\n    <div className=\"other\">\n      <h1>404 error. Page not found!</h1>\n      <p>Click me to go to the homepage!</p>\n      <Avatar />\n    </div>\n  );\n}\n\nexport default Other;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/home\";\nimport Setup from \"./components/setup\";\nimport Commands from \"./components/commands\";\nimport Other from \"./components/other\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/setup\" component={Setup} />\n        <Route path=\"/commands\" component={Commands} />\n        <Route component={Other} />\n        <header className=\"App-header\">\n          <p>Text1</p>\n          <h1>Text</h1>\n          <p>\n            Textaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4\n          </p>\n        </header>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}